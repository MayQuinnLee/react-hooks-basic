{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Ingredients.js\";\nimport React, { useState } from 'react';\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from './IngredientList';\n\nconst Ingredients = () => {\n  const [ingredients, setIngredients] = useState([]);\n  fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json').then(response => response.json()).then(responseData => {\n    const loadedIngredients = [];\n\n    for (const key in responseData) {\n      loadedIngredients.push({\n        id: key,\n        title: responseData[key].title,\n        amount: responseData[key].amount\n      });\n    } //setIngredients(loadedIngredients);\n\n  }); //browser function, send behind the scene http request. 2nd argument as a object that allows configuration. Firebase understand 'post' method not fetch. JSON is a class which takes stringify function to convert array/object to valid json format - a feature build into the browser. set headers that you want to append to the request. No need to do the same for Axios, because Axios did it for us (stringify & header)\n  //response.json() will extract the response body, responseData will be return when the body has been extracted. ResponseData will be an object\n\n  const addIngredientHandler = ingredient => {\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== ingredientId));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: ingredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Ingredients.js"],"names":["React","useState","IngredientForm","Search","IngredientList","Ingredients","ingredients","setIngredients","fetch","then","response","json","responseData","loadedIngredients","key","push","id","title","amount","addIngredientHandler","ingredient","method","body","JSON","stringify","headers","prevIngredients","name","removeIngredientHandler","ingredientId","filter","ig"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AAEAO,EAAAA,KAAK,CAAC,2DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,YAAY,IAAI;AACpB,UAAMC,iBAAiB,GAAG,EAA1B;;AACA,SAAK,MAAMC,GAAX,IAAkBF,YAAlB,EAA+B;AAC7BC,MAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACrBC,QAAAA,EAAE,EAAEF,GADiB;AAErBG,QAAAA,KAAK,EAAEL,YAAY,CAACE,GAAD,CAAZ,CAAkBG,KAFJ;AAGrBC,QAAAA,MAAM,EAAEN,YAAY,CAACE,GAAD,CAAZ,CAAkBI;AAHL,OAAvB;AAKD,KARmB,CASpB;;AACD,GAZD,EAJwB,CAkBxB;AACA;;AACA,QAAMC,oBAAoB,GAAGC,UAAU,IAAI;AACzCZ,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AACjEa,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf,CAF2D;AAGjEK,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHwD,KAA9D,CAAL,CAIGhB,IAJH,CAIQC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAND,EAMGF,IANH,CAMQG,YAAY,IAAI;AACtBL,MAAAA,cAAc,CAACmB,eAAe,IAAI,CAChC,GAAGA,eAD6B,EAEhC;AAACV,QAAAA,EAAE,EAAEJ,YAAY,CAACe,IAAlB;AAAwB,WAAGP;AAA3B,OAFgC,CAApB,CAAd;AAID,KAXD;AAYD,GAbD;;AAeA,QAAMQ,uBAAuB,GAAGC,YAAY,IAAI;AAC9CtB,IAAAA,cAAc,CAACmB,eAAe,IAC5BA,eAAe,CAACI,MAAhB,CAAuBC,EAAE,IAAIA,EAAE,CAACf,EAAH,KAAUa,YAAvC,CADY,CAAd;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,eAAe,EAAEV,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AACA,IAAA,WAAW,EAAEb,WADb;AAEA,IAAA,YAAY,EAAEsB,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADF;AAYD,CArDD;;AAuDA,eAAevB,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from './IngredientList';\n\n\nconst Ingredients = () => {\n\n  const [ingredients, setIngredients] = useState([]);\n\n  fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json')\n  .then(response => response.json())\n  .then(responseData => {\n    const loadedIngredients = [];\n    for (const key in responseData){\n      loadedIngredients.push({\n        id: key,\n        title: responseData[key].title,\n        amount: responseData[key].amount\n      });\n    }\n    //setIngredients(loadedIngredients);\n  });\n\n  //browser function, send behind the scene http request. 2nd argument as a object that allows configuration. Firebase understand 'post' method not fetch. JSON is a class which takes stringify function to convert array/object to valid json format - a feature build into the browser. set headers that you want to append to the request. No need to do the same for Axios, because Axios did it for us (stringify & header)\n  //response.json() will extract the response body, responseData will be return when the body has been extracted. ResponseData will be an object\n  const addIngredientHandler = ingredient => {\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json', { \n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {'Content-Type': 'application/json'} \n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setIngredients(prevIngredients => [\n        ...prevIngredients, \n        {id: responseData.name, ...ingredient}\n      ]);\n    })\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIngredients(prevIngredients => \n      prevIngredients.filter(ig => ig.id !== ingredientId)\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <IngredientForm onAddIngredient={addIngredientHandler}/>\n\n      <section>\n        <Search />\n        <IngredientList \n        ingredients={ingredients} \n        onRemoveItem={removeIngredientHandler}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}