{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/IngredientForm.js\";\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nconst IngredientForm = React.memo(props => {\n  const inputState = useState({\n    title: '',\n    amount: ''\n  });\n\n  const submitHandler = event => {\n    event.preventDefault(); // ...\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"ingredient-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    value: inputState[0].title,\n    onChange: event => {\n      const newTitle = event.target.value;\n      inputState[1](prevInputState => ({\n        title: newTitle,\n        amount: prevInputState.amount\n      })); //we set updating function -> telling react that we want to get the latest state that we set, even it hasn't been committed yet.\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    value: inputState[0].amount,\n    onChange: event => inputState[1](prevInputState => ({\n      amount: event.target.value,\n      title: prevInputState.title\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ingredient-form__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Add Ingredient\")))));\n});\nexport default IngredientForm;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/IngredientForm.js"],"names":["React","useState","Card","IngredientForm","memo","props","inputState","title","amount","submitHandler","event","preventDefault","newTitle","target","value","prevInputState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,sBAAP;AAEA,MAAMC,cAAc,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAK,IAAI;AACzC,QAAMC,UAAU,GAAGL,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAC,EAAP;AAAWC,IAAAA,MAAM,EAAC;AAAlB,GAAD,CAA3B;;AAEA,QAAMC,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN,GAD6B,CAE7B;AACD,GAHD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEF,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,EAAE,EAAC,OAFH;AAGA,IAAA,KAAK,EAAEH,UAAU,CAAC,CAAD,CAAV,CAAcC,KAHrB;AAIA,IAAA,QAAQ,EAAEG,KAAK,IAAI;AACjB,YAAME,QAAQ,GAAEF,KAAK,CAACG,MAAN,CAAaC,KAA7B;AACAR,MAAAA,UAAU,CAAC,CAAD,CAAV,CAAcS,cAAc,KAAK;AACjCR,QAAAA,KAAK,EAAEK,QAD0B;AAEjCJ,QAAAA,MAAM,EAAEO,cAAc,CAACP;AAFU,OAAL,CAA5B,EAFiB,CAMjB;AACD,KAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,EAAE,EAAC,QAFH;AAGA,IAAA,KAAK,EAAEF,UAAU,CAAC,CAAD,CAAV,CAAcE,MAHrB;AAIA,IAAA,QAAQ,EAAEE,KAAK,IACbJ,UAAU,CAAC,CAAD,CAAV,CAAcS,cAAc,KAAK;AAC/BP,MAAAA,MAAM,EAAEE,KAAK,CAACG,MAAN,CAAaC,KADU;AAE/BP,MAAAA,KAAK,EAAEQ,cAAc,CAACR;AAFS,KAAL,CAA5B,CALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,eA8BE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CA9BF,CADF,CADF,CADF;AAwCD,CAhDsB,CAAvB;AAkDA,eAAeJ,cAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\n\nconst IngredientForm = React.memo(props => {\n  const inputState = useState({title:'', amount:''});\n\n  const submitHandler = event => {\n    event.preventDefault();\n    // ...\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input \n            type=\"text\" \n            id=\"title\" \n            value={inputState[0].title} \n            onChange={event => {              \n              const newTitle =event.target.value;\n              inputState[1](prevInputState => ({\n              title: newTitle, \n              amount: prevInputState.amount\n            }))\n              //we set updating function -> telling react that we want to get the latest state that we set, even it hasn't been committed yet.\n            }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input \n            type=\"number\" \n            id=\"amount\" \n            value={inputState[0].amount}\n            onChange={event => \n              inputState[1](prevInputState => ({\n                amount: event.target.value, \n                title: prevInputState.title}))\n              }\n              />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n"]},"metadata":{},"sourceType":"module"}