{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Ingredients.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from './IngredientList';\n\nconst Ingredients = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', ingredients);\n  }, [ingredients]);\n  const filteredIngredientsHandler = useCallback(ingredient => {\n    setIngredients(ingredient);\n  }, []); //browser function, send behind the scene http request. 2nd argument as a object that allows configuration. Firebase understand 'post' method not fetch. JSON is a class which takes stringify function to convert array/object to valid json format - a feature build into the browser. set headers that you want to append to the request. No need to do the same for Axios, because Axios did it for us (stringify & header)\n  //response.json() will extract the response body, responseData will be return when the body has been extracted. ResponseData will be an object\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setIsLoading(false);\n      setIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-fae2f.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== ingredientId));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: ingredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Ingredients.js"],"names":["React","useState","useEffect","useCallback","IngredientForm","Search","IngredientList","Ingredients","ingredients","setIngredients","isLoading","setIsLoading","console","log","filteredIngredientsHandler","ingredient","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevIngredients","id","name","removeIngredientHandler","ingredientId","filter","ig"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAExB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA2BV,QAAQ,CAAC,KAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCL,WAArC;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,QAAMM,0BAA0B,GAAGX,WAAW,CAACY,UAAU,IAAI;AAC3DN,IAAAA,cAAc,CAACM,UAAD,CAAd;AACD,GAF6C,EAE3C,EAF2C,CAA9C,CATwB,CAaxB;AACA;;AACA,QAAMC,oBAAoB,GAAGD,UAAU,IAAI;AACzCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAM,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAF2D;AAGjEO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHwD,KAA9D,CAAL,CAIGC,IAJH,CAIQC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAND,EAMGF,IANH,CAMQG,YAAY,IAAI;AACtBf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,cAAc,CAACkB,eAAe,IAAI,CAChC,GAAGA,eAD6B,EAEhC;AAACC,QAAAA,EAAE,EAAEF,YAAY,CAACG,IAAlB;AAAwB,WAAGd;AAA3B,OAFgC,CAApB,CAAd;AAID,KAZD;AAaD,GAfD;;AAiBA,QAAMe,uBAAuB,GAAGC,YAAY,IAAI;AAC9CpB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAM,IAAAA,KAAK,CAAE,wDAAuDc,YAAa,OAAtE,EAA8E;AACjFb,MAAAA,MAAM,EAAE;AADyE,KAA9E,CAAL,CAEGK,IAFH,CAEQC,QAAQ,IAAI;AAClBb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,cAAc,CAACkB,eAAe,IAC5BA,eAAe,CAACK,MAAhB,CAAuBC,EAAE,IAAIA,EAAE,CAACL,EAAH,KAAUG,YAAvC,CADY,CAAd;AAGD,KAPD;AAQD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACA,IAAA,eAAe,EAAEf,oBADjB;AAEA,IAAA,OAAO,EAAEN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,iBAAiB,EAAEI,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AACA,IAAA,WAAW,EAAEN,WADb;AAEA,IAAA,YAAY,EAAEsB,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CADF;AAcD,CA1DD;;AA4DA,eAAevB,WAAf","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from './IngredientList';\n\n\nconst Ingredients = () => {\n\n  const [ingredients, setIngredients] = useState([]);\n  const [isLoading, setIsLoading] =useState(false);\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', ingredients);\n  }, [ingredients]);\n\n  const filteredIngredientsHandler = useCallback(ingredient => {\n    setIngredients(ingredient)\n  }, []);\n\n  //browser function, send behind the scene http request. 2nd argument as a object that allows configuration. Firebase understand 'post' method not fetch. JSON is a class which takes stringify function to convert array/object to valid json format - a feature build into the browser. set headers that you want to append to the request. No need to do the same for Axios, because Axios did it for us (stringify & header)\n  //response.json() will extract the response body, responseData will be return when the body has been extracted. ResponseData will be an object\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json', { \n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {'Content-Type': 'application/json'} \n    }).then(response => {\n      return response.json();\n    }).then(responseData => {\n      setIsLoading(false);\n      setIngredients(prevIngredients => [\n        ...prevIngredients, \n        {id: responseData.name, ...ingredient}\n      ]);\n    })\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-fae2f.firebaseio.com/ingredients/${ingredientId}.json`, { \n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setIngredients(prevIngredients => \n        prevIngredients.filter(ig => ig.id !== ingredientId)\n      );\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <IngredientForm \n      onAddIngredient={addIngredientHandler}\n      loading={isLoading}/>\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList \n        ingredients={ingredients} \n        onRemoveItem={removeIngredientHandler}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}