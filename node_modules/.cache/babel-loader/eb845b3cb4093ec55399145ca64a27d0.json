{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Ingredients.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst ingredientReducer = (ingredients\n/*state*/\n, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n\n    case 'ADD':\n      return [...ingredients, action.ingredients];\n\n    case 'DELETE':\n      return ingredients.filter(ing => ing.id !== action.ingredientId);\n\n    default:\n      return 'This should not be here';\n  }\n};\n\nconst Ingredients = () => {\n  const [ingredients, setIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', ingredients);\n  }, [ingredients]);\n  const filteredIngredientsHandler = useCallback(ingredient => {\n    setIngredients(ingredient);\n  }, []); //browser function, send behind the scene http request. 2nd argument as a object that allows configuration. Firebase understand 'post' method not fetch. JSON is a class which takes stringify function to convert array/object to valid json format - a feature build into the browser. set headers that you want to append to the request. No need to do the same for Axios, because Axios did it for us (stringify & header)\n  //response.json() will extract the response body, responseData will be return when the body has been extracted. ResponseData will be an object\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-fae2f.firebaseio.com/ingredients/${ingredientId}.json`, {\n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setIngredients(prevIngredients => prevIngredients.filter(ig => ig.id !== ingredientId));\n    }).catch(err => {\n      setError(err.message);\n      setIsLoading(false);\n    });\n  };\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \"), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: ingredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Ingredients;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Ingredients.js"],"names":["React","useState","useEffect","useCallback","IngredientForm","Search","IngredientList","ErrorModal","ingredientReducer","ingredients","action","type","filter","ing","id","ingredientId","Ingredients","setIngredients","isLoading","setIsLoading","error","setError","console","log","filteredIngredientsHandler","ingredient","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevIngredients","name","removeIngredientHandler","ig","catch","err","message","clearError"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC;AAAY;AAAb,EAAwBC,MAAxB,KAAmC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,KAAL;AACE,aAAOD,MAAM,CAACD,WAAd;;AACF,SAAK,KAAL;AACE,aAAO,CAAC,GAAGA,WAAJ,EAAiBC,MAAM,CAACD,WAAxB,CAAP;;AACF,SAAK,QAAL;AACE,aAAOA,WAAW,CAACG,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,YAA5C,CAAP;;AACF;AAAS,aAAO,yBAAP;AAPX;AASD,CAVD;;AAYA,MAAMC,WAAW,GAAG,MAAM;AAExB,QAAM,CAACP,WAAD,EAAcQ,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA2BlB,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCd,WAArC;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,QAAMe,0BAA0B,GAAGrB,WAAW,CAACsB,UAAU,IAAI;AAC3DR,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACD,GAF6C,EAE3C,EAF2C,CAA9C,CAVwB,CAcxB;AACA;;AACA,QAAMC,oBAAoB,GAAGD,UAAU,IAAI;AACzCN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,UAAf,CAF2D;AAGjEO,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAHwD,KAA9D,CAAL,CAIGC,IAJH,CAIQC,QAAQ,IAAI;AAClBf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,aAAOe,QAAQ,CAACC,IAAT,EAAP;AACD,KAPD,EAOGF,IAPH,CAOQG,YAAY,IAAI;AACtBnB,MAAAA,cAAc,CAACoB,eAAe,IAAI,CAChC,GAAGA,eAD6B,EAEhC;AAACvB,QAAAA,EAAE,EAAEsB,YAAY,CAACE,IAAlB;AAAwB,WAAGb;AAA3B,OAFgC,CAApB,CAAd;AAID,KAZD;AAaD,GAfD;;AAiBA,QAAMc,uBAAuB,GAAGxB,YAAY,IAAI;AAC9CI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAQ,IAAAA,KAAK,CAAE,wDAAuDZ,YAAa,OAAtE,EAA8E;AACjFa,MAAAA,MAAM,EAAE;AADyE,KAA9E,CAAL,CAEGK,IAFH,CAEQC,QAAQ,IAAI;AAClBf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,cAAc,CAACoB,eAAe,IAC5BA,eAAe,CAACzB,MAAhB,CAAuB4B,EAAE,IAAIA,EAAE,CAAC1B,EAAH,KAAUC,YAAvC,CADY,CAAd;AAGD,KAPD,EAOG0B,KAPH,CAOSC,GAAG,IAAI;AACdrB,MAAAA,QAAQ,CAACqB,GAAG,CAACC,OAAL,CAAR;AACAxB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVD;AAWD,GAbD;;AAeA,QAAMyB,UAAU,GAAG,MAAM;AACvBvB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,iBAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEwB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCxB,KAAnC,MADZ,eAEE,oBAAC,cAAD;AACA,IAAA,eAAe,EAAEM,oBADjB;AAEA,IAAA,OAAO,EAAER,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,iBAAiB,EAAEM,0BAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AACA,IAAA,WAAW,EAAEf,WADb;AAEA,IAAA,YAAY,EAAE8B,uBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF;AAeD,CAnED;;AAqEA,eAAevB,WAAf","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport Search from './Search';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\n\nconst ingredientReducer = (ingredients /*state*/, action) => {\n  switch(action.type){\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...ingredients, action.ingredients];\n    case 'DELETE':\n      return ingredients.filter(ing => ing.id !== action.ingredientId);\n    default: return 'This should not be here'\n  }\n};\n\nconst Ingredients = () => {\n\n  const [ingredients, setIngredients] = useState([]);\n  const [isLoading, setIsLoading] =useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', ingredients);\n  }, [ingredients]);\n\n  const filteredIngredientsHandler = useCallback(ingredient => {\n    setIngredients(ingredient)\n  }, []);\n\n  //browser function, send behind the scene http request. 2nd argument as a object that allows configuration. Firebase understand 'post' method not fetch. JSON is a class which takes stringify function to convert array/object to valid json format - a feature build into the browser. set headers that you want to append to the request. No need to do the same for Axios, because Axios did it for us (stringify & header)\n  //response.json() will extract the response body, responseData will be return when the body has been extracted. ResponseData will be an object\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json', { \n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {'Content-Type': 'application/json'} \n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setIngredients(prevIngredients => [\n        ...prevIngredients, \n        {id: responseData.name, ...ingredient}\n      ]);\n    })\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-fae2f.firebaseio.com/ingredients/${ingredientId}.json`, { \n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setIngredients(prevIngredients => \n        prevIngredients.filter(ig => ig.id !== ingredientId)\n      );\n    }).catch(err => {\n      setError(err.message);\n      setIsLoading(false);\n    })\n  }\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}> {error} </ErrorModal>}\n      <IngredientForm \n      onAddIngredient={addIngredientHandler}\n      loading={isLoading}/>\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList \n        ingredients={ingredients} \n        onRemoveItem={removeIngredientHandler}/>\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n"]},"metadata":{},"sourceType":"module"}