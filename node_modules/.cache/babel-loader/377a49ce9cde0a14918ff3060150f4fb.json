{"ast":null,"code":"var _jsxFileName = \"/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Search.js\";\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card';\nimport './Search.css';\nconst Search = React.memo(props => {\n  const {\n    onLoadIngredients\n  } = props; //object destructuring, function is a object, onLoadIngredients as a key \n\n  const [enteredFilter, setEnteredFilter] = useState(''); //to filter the ingredients in the backend, need to fetch backend data\n\n  useEffect(() => {\n    //to only fetch information of 'enteredFilter' and not everything\n    const query = enteredFilter.length === 0 ? '' : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json' + query).then(response => response.json()).then(responseData => {\n      const loadedIngredients = [];\n\n      for (const key in responseData) {\n        loadedIngredients.push({\n          id: key,\n          title: responseData[key].title,\n          amount: responseData[key].amount\n        });\n      }\n\n      onLoadIngredients(loadedIngredients); //infinite loop, as parent will re-render when this function is being re-rendered, since this is a dependencies: solution useCallback() it cached your function for you, so that it survives re-render cycle\n    });\n  }, [enteredFilter, onLoadIngredients]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Filter by Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: enteredFilter,\n    onChange: event => setEnteredFilter(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }))));\n});\nexport default Search;","map":{"version":3,"sources":["/Users/jovangoh/Desktop/react-hooks-basic/src/components/Ingredients/Search.js"],"names":["React","useState","useEffect","Card","Search","memo","props","onLoadIngredients","enteredFilter","setEnteredFilter","query","length","fetch","then","response","json","responseData","loadedIngredients","key","push","id","title","amount","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,cAAP;AAEA,MAAMC,MAAM,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAI;AACjC,QAAM;AAACC,IAAAA;AAAD,MAAsBD,KAA5B,CADiC,CACE;;AACnC,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD,CAFiC,CAIjC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,KAAK,GACTF,aAAa,CAACG,MAAd,KAAuB,CAAvB,GACE,EADF,GAEG,6BAA4BH,aAAc,GAH/C;AAIAI,IAAAA,KAAK,CAAC,8DAA8DF,KAA/D,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,YAAY,IAAI;AACpB,YAAMC,iBAAiB,GAAG,EAA1B;;AACA,WAAK,MAAMC,GAAX,IAAkBF,YAAlB,EAA+B;AAC7BC,QAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACrBC,UAAAA,EAAE,EAAEF,GADiB;AAErBG,UAAAA,KAAK,EAAEL,YAAY,CAACE,GAAD,CAAZ,CAAkBG,KAFJ;AAGrBC,UAAAA,MAAM,EAAEN,YAAY,CAACE,GAAD,CAAZ,CAAkBI;AAHL,SAAvB;AAKD;;AACDf,MAAAA,iBAAiB,CAACU,iBAAD,CAAjB,CAToB,CASkB;AACvC,KAZD;AAaD,GAnBQ,EAmBP,CAACT,aAAD,EAAgBD,iBAAhB,CAnBO,CAAT;AAqBA,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,KAAK,EAAEC,aAFP;AAGA,IAAA,QAAQ,EAAEe,KAAK,IAAId,gBAAgB,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF;AAaD,CAvCc,CAAf;AAyCA,eAAerB,MAAf","sourcesContent":["import React , {useState, useEffect} from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const {onLoadIngredients} = props; //object destructuring, function is a object, onLoadIngredients as a key \n  const [enteredFilter, setEnteredFilter] = useState('');\n\n  //to filter the ingredients in the backend, need to fetch backend data\n  useEffect(() => {\n    //to only fetch information of 'enteredFilter' and not everything\n    const query = \n      enteredFilter.length===0 \n      ? '' \n      : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`\n    fetch('https://react-hooks-fae2f.firebaseio.com/ingredients.json' + query)\n    .then(response => response.json())\n    .then(responseData => {\n      const loadedIngredients = [];\n      for (const key in responseData){\n        loadedIngredients.push({\n          id: key,\n          title: responseData[key].title,\n          amount: responseData[key].amount\n        });\n      }\n      onLoadIngredients(loadedIngredients); //infinite loop, as parent will re-render when this function is being re-rendered, since this is a dependencies: solution useCallback() it cached your function for you, so that it survives re-render cycle\n    })\n  },[enteredFilter, onLoadIngredients])\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input \n          type=\"text\"\n          value={enteredFilter}\n          onChange={event => setEnteredFilter(event.target.value)} />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}